{"version":3,"file":"index3790ef959f9b1ea73077.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA,iEAAe;AACf;AACA,CAAC;;;;;;;;;;;;;;ACHD,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACjBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;AChCS;AACN;AACsB;;AAEjD;AACA,MAAM,6DAAiB;AACvB,WAAW,6DAAiB;AAC5B;;AAEA;AACA,iDAAiD,+CAAG,KAAK;;AAEzD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,8DAAe;AACxB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;AC5Bc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,iEAAe,QAAQ;;;;;;;;;;;;;;ACNR;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;;AAEoC;;AAErB;AACf;AACA,YAAY,gDAAM;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjB0B;;AAE1B,gBAAgB,iDAAI;;AAEpB;;AAEA;;;;;;;;;;;;;;;;;ACNkC;AACM;;AAEzB;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,qDAAI;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,wDAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://todo-list/./node_modules/uuid/dist/esm-browser/native.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/regex.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/rng.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/v4.js","webpack://todo-list/./node_modules/uuid/dist/esm-browser/validate.js","webpack://todo-list/./src/classes/project.js","webpack://todo-list/./src/classes/task.js","webpack://todo-list/./src/index.js","webpack://todo-list/./src/todo.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default class Project {\n  constructor(title) {\n    this.title = title;\n    this.task = [];\n  }\n\n  set newTask(id) {\n    this.task.push(id);\n  }\n}\n","/* eslint-disable no-underscore-dangle */\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class Todo {\n\tconstructor(title) {\n\t\tthis.id = uuidv4();\n\t\tthis.title = title;\n\t}\n\n\tset project(title) {\n\t\tthis._project = title;\n\t}\n\n\tget project() {\n\t\treturn this._project;\n\t}\n}\n","import todo from './todo';\n\nconst newTodo = todo();\n\nnewTodo.createNewTodo('Haha');\n\nconsole.log(newTodo.getTodos());\n","import Todo from './classes/task';\nimport Project from './classes/project';\n\nexport default function todo() {\n\tconst todoArray = [];\n\tconst projectArray = [];\n\tlet activeProject;\n\n\tconst getTodos = () => {\n\t\treturn todoArray;\n\t};\n\n\tconst getProjects = () => {\n\t\treturn projectArray;\n\t};\n\n\tconst createNewTodo = (title) => {\n\t\tconst todo = new Todo(title);\n\t\tif (activeProject) {\n\t\t\taddTodoToProject(todo, activeProject);\n\t\t}\n\t\tsaveTodo(todo);\n\t\treturn todo;\n\t};\n\n\tconst addTodoToProject = (todo, project) => {\n\t\tproject.newTodo = todo.id;\n\t\ttodo.project = project.title;\n\t};\n\n\tconst saveTodo = (todo) => {\n\t\ttodoArray.push(todo);\n\t};\n\n\tconst createNewProject = (title) => {\n\t\tconst project = new Project(title);\n\t\tsaveProject(project);\n\t\treturn project;\n\t};\n\n\tconst saveProject = (project) => {\n\t\tprojectArray.push(project);\n\t};\n\n\tconst setActiveProject = (project) => {\n\t\tactiveProject = project;\n\t};\n\n\treturn {\n\t\tcreateNewTodo,\n\t\tcreateNewProject,\n\t\tgetProjects,\n\t\tgetTodos,\n\t\tsetActiveProject,\n\t};\n}\n"],"names":[],"sourceRoot":""}